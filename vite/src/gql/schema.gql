type House {
  address: String
  houseId: BigInteger
  number: Int
  owner: String
  rooms: [Room]
}

type Lead {
  comments: [LeadComment]
  "ISO-8601"
  creationDate: DateTime
  email: String
  firstName: String
  id: BigInteger
  lastName: String
  leadNr: String
  status: String
}

type LeadComment {
  comment: String
  id: BigInteger
  lead: Lead
}

type LeadGQL {
  categoryList: [String]
  leads: [Lead]
  statusList: [String]
}

"Mutation root"
type Mutation {
  createLead(lead: LeadInput): Lead
}

"Query root"
type Query {
  house: House
  "Get a Films from a galaxy far far away"
  lead(order: String = "asc", status: String, term: String): LeadGQL
}

type Room {
  height: Float
  house: House
  length: Float
  roomId: BigInteger
  width: Float
  windows: [Window]
}

type Window {
  producent: String
  room: Room
  size: String
  windowId: BigInteger
}

"Scalar for BigDecimal"
scalar BigDecimal

"Scalar for BigInteger"
scalar BigInteger

"Scalar for DateTime"
scalar DateTime

input LeadCommentInput {
  comment: String
  id: BigInteger
  lead: LeadInput
}

input LeadInput {
  comments: [LeadCommentInput]
  "ISO-8601"
  creationDate: DateTime
  email: String
  firstName: String
  id: BigInteger
  lastName: String
  leadNr: String
  status: String
}
