type Application {
  applicationNr: String
  beneficiaries: [Beneficiary]
  id: BigInteger
}

type Beneficiary {
  application: Application
  firstName: String
  id: BigInteger
}

type Config {
  configItems: [ConfigItem]
  id: BigInteger
  name: String
}

type ConfigItem {
  config: Config
  id: BigInteger
  key: String
  value: String
}

type Lead {
  comments: [LeadComment]
  id: BigInteger
}

type LeadComment {
  comment: String
  id: BigInteger
  lead: Lead
}

type LeadGQL {
  leads: [Lead]
}

"Mutation root"
type Mutation {
  createApplication(application: ApplicationInput): Application
}

"Query root"
type Query {
  "Get leads"
  getLeads: LeadGQL
  "Get root state"
  getRoot(applicationId: BigInteger): RootGQL
}

type RootGQL {
  applications: [Application]
  config: Config
  leads: [Lead]
}

"Scalar for BigDecimal"
scalar BigDecimal

"Scalar for BigInteger"
scalar BigInteger

input ApplicationInput {
  applicationNr: String
  beneficiaries: [BeneficiaryInput]
  id: BigInteger
}

input BeneficiaryInput {
  application: ApplicationInput
  firstName: String
  id: BigInteger
}
