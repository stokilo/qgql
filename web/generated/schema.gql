schema {
  query: Query
  mutation: Mutation
}

interface Character {
  name: String
  surname: String
}

union SearchResult = Ally | Film | Hero

type Ally implements Character {
  name: String
  partner: Hero
  surname: String
}

type Film {
  director: String
  episodeID: Int
  heroes: [Hero]
  "ISO-8601"
  releaseDate: Date
  title: String
}

type Hero implements Character {
  darkSide: Boolean
  episodeIds: [Int]
  height: Float
  lightSaber: LightSaber
  mass: Int
  name: String
  surname: String
}

type HeroCreationResult {
  error: String
  hero: Hero
  success: Boolean!
}

"Mutation root"
type Mutation {
  createHero(hero: HeroInput): HeroCreationResult
  deleteHero(id: Int!): Hero
}

"Query root"
type Query {
  "Get all Films from a galaxy far far away"
  allFilms: [Film]
  "Get all Todos"
  allTodos: [TodoList]
  allies: [Ally]
  "Get all characters from a galaxy far far away"
  characters: [Character]
  "Get a Films from a galaxy far far away"
  film(filmId: [Int]): Film
  heroesWithSurname(surname: String = "Skywalker"): [Hero]
  "Search for heroes or films"
  search(query: String): [SearchResult]
}

type TodoList {
  id: BigInteger
  items: [TodoListItem]
  name: String
}

type TodoListItem {
  id: BigInteger
  text: String
  todoList: TodoList
}

type __Directive {
  args(includeDeprecated: Boolean = false): [__InputValue!]!
  description: String
  isRepeatable: Boolean!
  locations: [__DirectiveLocation!]!
  "The __Directive type represents a Directive that a server supports."
  name: String!
  onField: Boolean @deprecated
  onFragment: Boolean @deprecated
  onOperation: Boolean @deprecated
}

type __EnumValue {
  deprecationReason: String
  description: String
  isDeprecated: Boolean!
  name: String!
}

type __Field {
  args(includeDeprecated: Boolean = false): [__InputValue!]!
  deprecationReason: String
  description: String
  isDeprecated: Boolean!
  name: String!
  type: __Type!
}

type __InputValue {
  defaultValue: String
  deprecationReason: String
  description: String
  isDeprecated: Boolean
  name: String!
  type: __Type!
}

"A GraphQL Introspection defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, the entry points for query, mutation, and subscription operations."
type __Schema {
  description: String
  "'A list of all directives supported by this server."
  directives: [__Directive!]!
  "If this server supports mutation, the type that mutation operations will be rooted at."
  mutationType: __Type
  "The type that query operations will be rooted at."
  queryType: __Type!
  "'If this server support subscription, the type that subscription operations will be rooted at."
  subscriptionType: __Type
  "A list of all types supported by this server."
  types: [__Type!]!
}

type __Type {
  description: String
  enumValues(includeDeprecated: Boolean = false): [__EnumValue!]
  fields(includeDeprecated: Boolean = false): [__Field!]
  inputFields(includeDeprecated: Boolean = false): [__InputValue!]
  interfaces: [__Type!]
  kind: __TypeKind!
  name: String
  ofType: __Type
  possibleTypes: [__Type!]
  specifiedByUrl: String
}

enum LightSaber {
  BLUE
  GREEN
  RED
}

"An enum describing valid locations where a directive can be placed"
enum __DirectiveLocation {
  "Indicates the directive is valid on a field argument SDL definition."
  ARGUMENT_DEFINITION
  "Indicates the directive is valid on an enum SDL definition."
  ENUM
  "Indicates the directive is valid on an enum value SDL definition."
  ENUM_VALUE
  "Indicates the directive is valid on fields."
  FIELD
  "Indicates the directive is valid on a field SDL definition."
  FIELD_DEFINITION
  "Indicates the directive is valid on fragment definitions."
  FRAGMENT_DEFINITION
  "Indicates the directive is valid on fragment spreads."
  FRAGMENT_SPREAD
  "Indicates the directive is valid on inline fragments."
  INLINE_FRAGMENT
  "Indicates the directive is valid on an input object field SDL definition."
  INPUT_FIELD_DEFINITION
  "Indicates the directive is valid on an input object SDL definition."
  INPUT_OBJECT
  "Indicates the directive is valid on an interface SDL definition."
  INTERFACE
  "Indicates the directive is valid on mutations."
  MUTATION
  "Indicates the directive is valid on an object SDL definition."
  OBJECT
  "Indicates the directive is valid on queries."
  QUERY
  "Indicates the directive is valid on a scalar SDL definition."
  SCALAR
  "Indicates the directive is valid on a schema SDL definition."
  SCHEMA
  "Indicates the directive is valid on subscriptions."
  SUBSCRIPTION
  "Indicates the directive is valid on an union SDL definition."
  UNION
  "Indicates the directive is valid on variable definitions."
  VARIABLE_DEFINITION
}

"An enum describing what kind of type a given __Type is"
enum __TypeKind {
  "Indicates this type is an enum. `enumValues` is a valid field."
  ENUM
  "Indicates this type is an input object. `inputFields` is a valid field."
  INPUT_OBJECT
  "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields."
  INTERFACE
  "Indicates this type is a list. `ofType` is a valid field."
  LIST
  "Indicates this type is a non-null. `ofType` is a valid field."
  NON_NULL
  "Indicates this type is an object. `fields` and `interfaces` are valid fields."
  OBJECT
  "Indicates this type is a scalar. 'specifiedByUrl' is a valid field"
  SCALAR
  "Indicates this type is a union. `possibleTypes` is a valid field."
  UNION
}

"Scalar for BigDecimal"
scalar BigDecimal

"Scalar for BigInteger"
scalar BigInteger

"Scalar for Date"
scalar Date

input HeroInput {
  darkSide: Boolean
  episodeIds: [Int]
  height: Float
  lightSaber: LightSaber
  mass: Int
  name: String
  surname: String
}
